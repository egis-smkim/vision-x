plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.5'
}



bootWar {
	enabled = false
}

war {
	enabled = true
	archiveBaseName = 'visionX'
	archiveFileName = 'visionX.war'
}

group = 'com.vision-x'
version = '0.0.1-SNAPSHOT'
bootWar.enabled = false
war.enabled = true

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

repositories {
	maven {
		url 'https://nexus.geomatys.com/repository/geotoolkit/'
	}
	maven {
		url 'https://repo.osgeo.org/repository/release/'
	}
	maven {
		url 'https://maven.openkm.com'
	}
	maven {
		url 'https://repo.osgeo.org/repository/snapshot/'
	}
	maven {
		url 'https://repo.spring.io/snapshot'
	}
	maven {
		url "https://jitpack.io"
	}
	// 필요한 경우 아래 두 리포지토리도 사용 가능
	//maven {
	//	url 'http://maven.egovframework.kr:8080/maven/'
	//	allowInsecureProtocol = true
	//}
	maven {
		url 'http://www.egovframe.go.kr/maven/'
		allowInsecureProtocol = true
	}
	maven { url "https://maven.egovframe.go.kr/maven/" } //전자정부 프레임워크

	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// Lombok(필요한 경우)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'com.amazonaws:aws-java-sdk-s3:1.11.238'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	/*
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0' // Jakarta EE 9 버전
	implementation 'commons-lang:commons-lang:2.6'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'xalan:xalan:2.7.2'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'



	// Lombok(필요한 경우)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB

	implementation 'org.geotools:geotools:15.1'
	implementation 'org.geotools:gt-geometry:11.3'
	implementation 'org.json:json:20210307'
	implementation 'org.locationtech.jts:jts-core:1.18.2'
	implementation 'org.geotools:gt-main:24.0'
	implementation 'org.geotools:gt-shapefile:26.0'
	implementation 'org.geotools:gt-coverage:26.0'
	implementation 'org.geotools:gt-geotiff:26.0'
	implementation 'org.geotools:gt-wms:27.0'
	implementation 'org.geotools:gt-render:26.0'
	implementation 'org.geotools:gt-geojson:26.0'
	implementation 'org.geotools:gt-tile-client:26.0'
	implementation 'org.locationtech.jts:jts-core:1.18.0' // 최신 버전 사용
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'org.apache.commons:commons-csv:1.8'
	implementation 'oro:oro:2.0.8'
	implementation 'org.apache.commons:commons-compress:1.21'
	implementation 'com.github.albfernandez:juniversalchardet:2.4.0'
	implementation 'org.apache.httpcomponents:fluent-hc:4.5.13'
	implementation 'com.google.code.gson:gson:2.8.9'

	implementation 'egovframework.rte:egovframework.rte.fdl.cmmn:3.9.0'
	implementation 'egovframework.rte:egovframework.rte.psl.dataaccess:3.9.0'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
	implementation 'org.springframework.boot:spring-boot-starter-amqp' // Spring AMQP 의존성
	implementation 'com.github.rkpunjal.sqlsafe:sql-injection-safe:1.0.2'
	implementation 'org.codehaus.plexus:plexus-utils:3.4.0' // 최신 버전을 사용할 수 있습니다
	implementation 'net.sf.json-lib:json-lib:2.4:jdk15' // jdk15는 Java 1.5 이상 버전을 위한 모듈입니다
	implementation 'commons-beanutils:commons-beanutils:1.9.4' // 추가 의존성
	implementation 'commons-collections:commons-collections:3.2.2' // 추가 의존성
	implementation 'commons-lang:commons-lang:2.6' // 추가 의존성
	implementation 'commons-logging:commons-logging:1.2' // 추가 의존성
	implementation 'net.sf.ezmorph:ezmorph:1.0.6' // 추가 의존성
	implementation 'com.itlgl:byteutil:0.1.2'
	implementation 'org.projectlombok:lombok:1.18.30' // 최신 버전을 사용할 수 있습니다
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'org.hsqldb:hsqldb:2.6.1' // 최신 버전으로 업데이트할 수 있습니다
	//implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
*/
}

tasks.named('test') {
	useJUnitPlatform()
}
war{

}
test {
	enabled = false
}
