name: CI/CD Pipeline

on:
  push:
    branches:
      - dev   # 개발 브랜치
      - main  # 상용 브랜치

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 클론
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Development Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USER }}
          password: ${{ secrets.DEV_SERVER_PASSWORD }}
          script: |
            cd /path/to/project
            git pull origin dev
            docker-compose -f docker-compose-dev.yml down
            docker-compose -f docker-compose-dev.yml up --build -d

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          password: ${{ secrets.PROD_SERVER_PASSWORD }}
          script: |
            cd /path/to/project
            git pull origin main
            docker-compose -f docker-compose-prod.yml down
            docker-compose -f docker-compose-prod.yml up --build -d
